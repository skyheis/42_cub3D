check_map.c:	if (x == 0 || x == map->width)
check_map.c:		ft_iswallornot(map, map->map[y][x]);
check_map.c:	if (x < 0 || x >= map->width || y < 0 || y >= map->hight)
check_map.c:	if (map->map[y][x] == '.' || map->map[y][x] == '1')
check_map.c:	else if (ft_isvalidmap(map->map[y][x]))
check_map.c:		map->map[y][x] = '.';
check_map.c:	while (map->map[y][x])
check_map.c:		ft_iswallornot(map, map->map[y][x++]);
check_map.c:	y = map->hight - 1;
check_map.c:	while (map->map[y][x])
check_map.c:		ft_iswallornot(map, map->map[y][x++]);
check_map.c:	while (y < map->hight - 1)
check_map.c:		while (x < map->width)
check_map.c:			if (map->map[y][x] == '0')
check_player.c:		map->player[0] = -1;
check_player.c:		map->player[1] = -1;
check_player.c:		map->player[2] = -1;
check_player.c:	while (map->map[y])
check_player.c:		while (map->map[y][x])
check_player.c:			if (ft_isplayer(map->map[y][x]))
check_player.c:				map->player[0] = x;
check_player.c:				map->player[1] = y;
check_player.c:				map->player[2] = map->map[y][x];
dda.c:		if(map->map[ray->mapX][ray->mapY] == '1') //is 1
main.c:	//p->posX = 22.0; //prendere da map->player[0]
main.c:	//p->posY = 11.5; //prendere da map->player[1]
map.c:		map->map_memory = ft_strjoin_free(map->map_memory, file_memory);
map.c:	while (map->map_memory[i])
map.c:		while (map->map_memory[i] == '\n')
map.c:		if (!ft_strncmp(&map->map_memory[i], "NO ", 3))
map.c:			ft_wallimage_path(map->map_memory, &i, &map->no_file);
map.c:		else if (!ft_strncmp(&map->map_memory[i], "SO ", 3))
map.c:			ft_wallimage_path(map->map_memory, &i, &map->so_file);
map.c:		else if (!ft_strncmp(&map->map_memory[i], "WE ", 3))
map.c:			ft_wallimage_path(map->map_memory, &i, &map->we_file);
map.c:		else if (!ft_strncmp(&map->map_memory[i], "EA ", 3))
map.c:			ft_wallimage_path(map->map_memory, &i, &map->ea_file);
map.c:		else if (!ft_strncmp(&map->map_memory[i], "F ", 2))
map.c:			ft_get_fc_color(map->map_memory, &i, &map->floor_color);
map.c:		else if (!ft_strncmp(&map->map_memory[i], "C ", 2))
map.c:			ft_get_fc_color(map->map_memory, &i, &map->cieling_color);
map.c:	map->map_memory = NULL;
map.c:	map->map = NULL;
map.c:	map->width = 0;
map.c:	map->hight = 0;
map.c:	map->no_file = NULL;
map.c:	map->so_file = NULL;
map.c:	map->we_file = NULL;
map.c:	map->ea_file = NULL;
map.c:	map->floor_color = -1;
map.c:	map->cieling_color = -1;
map.c:	map->map = ft_splitmap(map, &map->map_memory[i]);
map.c:	ft_free_null(&map->map_memory);
map_split.c:	map->width = ft_longestline(onlymap);
map_split.c:		split[y] = (char *) ft_calloc(map->width + 1, sizeof(char));
map_split.c:	map->hight = y;
map_utils.c:	if (!map->no_file || !map->so_file || !map->we_file || !map->ea_file)
map_utils.c:	if (map->floor_color == -1 || map->cieling_color == -1)
testing.c:	p->posX = 22.0; //prendere da map->player[0]
testing.c:	p->posY = 11.5; //prendere da map->player[1]
